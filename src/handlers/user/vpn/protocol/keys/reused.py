from .markup import keys_markup
from aiogram import types

def get_keys_text(emoji) -> str:
    return(f'{emoji} <i>–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–æ–ª-–≤–∞ –∫–ª—é—á–µ–π</i>\n\n'
           'üîê <b>–í–∞–∂–Ω–æ:</b> –ö–ª—é—á –≤—ã–¥–∞–µ—Ç—Å—è –≤ –æ–¥–Ω–∏ —Ä—É–∫–∏.\n\n'
           '<blockquote><i>–ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ª—é–±—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –≤–æ–∑–Ω–∏–∫—à–∏–µ –≤ —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–¥–∞—á–∏ –∫–ª—é—á–∞ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –∏–ª–∏ –µ–≥–æ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.</i></blockquote>\n')

def parse_keys_callback_data(callback_data: str):
    splitted_callback_data = callback_data.split(':')

    payment_methods_numbers = {
        'cryptobot': 1,
        'yookassa': 2,
        'stars': 3
    }

    match splitted_callback_data[2]:
        case 'cryptobot':
            emoji = 'üëæ'
        case 'yookassa':
            emoji = 'üí≥'
        case 'stars':
            emoji = 'üåü'
    
    protocol = splitted_callback_data[1]
    payment_method = splitted_callback_data[2]
    
    return protocol, payment_methods_numbers[payment_method], emoji


async def display_keys_message(event: types.CallbackQuery):
    protocol, payment_method_number, emoji = parse_keys_callback_data(callback_data=event.data)
    
    keys_text = get_keys_text(emoji) 
    
    await event.message.edit_text(
        text=keys_text,
        reply_markup=await keys_markup(protocol=protocol, payment_method_number=payment_method_number)
    )