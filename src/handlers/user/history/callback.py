from aiogram import F, types
from src.core.routes import user_router
from .markup import history_markup, back_markup

@user_router.callback_query(F.data == 'history')
async def history_callback_query_handler(callback: types.CallbackQuery):
    user_id = callback.from_user.id

    # –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏
    valid_keys = ["–ö–ª—é—á-1 ‚Äî –¥–æ 10.05.2025"]
    expired_keys = ["–ö–ª—é—á-1 ‚Äî –¥–æ 10.05.2025"]

    # –ê–∫—Ç–∏–≤–Ω—ã–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∫—É–ø–æ–Ω—ã
    active_coupons = ["–ö—É–ø–æ–Ω-5% ‚Äî 20.02.2025"]
    used_coupons = ["–ö—É–ø–æ–Ω-5% ‚Äî 20.02.2025"]

    # –§–ª–∞–≥–∏ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
    has_valid_keys = bool(valid_keys)
    has_expired_keys = bool(expired_keys)
    has_active_coupons = bool(active_coupons)
    has_used_coupons = bool(used_coupons)

    has_keys = has_valid_keys or has_expired_keys
    has_coupons = has_active_coupons or has_used_coupons

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏–µ (1 –∫–ª—é—á + 1 –∫—É–ø–æ–Ω –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
    one_key_one_coupon = (has_valid_keys and has_used_coupons) or (has_expired_keys and has_active_coupons)

    # –ù–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
    text = "üóÇ <i>–ú–µ–Ω—é –∏—Å—Ç–æ—Ä–∏–∏</i>"

    if not one_key_one_coupon:  # –ï—Å–ª–∏ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ —Ç–µ–∫—Å—Ç
        if has_valid_keys:
            text += "\n\nüîë <b>–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏:</b>\n" + "\n".join(valid_keys)
        if has_expired_keys:
            text += "\n\n‚õî <b>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏:</b>\n" + "\n".join(expired_keys)

        if has_active_coupons:
            text += "\n\nü™™ <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –∫—É–ø–æ–Ω—ã:</b>\n" + "\n".join(active_coupons)
        if has_used_coupons:
            text += "\n\n‚ôª <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∫—É–ø–æ–Ω—ã:</b>\n" + "\n".join(used_coupons)

    # –í—ã–±–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = await history_markup(has_keys, has_coupons) if one_key_one_coupon else await back_markup()

    await callback.message.edit_text(
        text=text,
        reply_markup=markup
    )
